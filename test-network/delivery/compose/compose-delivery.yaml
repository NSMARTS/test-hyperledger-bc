version: '3.7'

volumes:
  orderer3.delivery.com:
  orderer4.delivery.com:
  couchdb2:
  couchdb3:
  peer0.delivery.com:
  peer1.delivery.com:

networks:
  blockchain_network:
    name: test_network

services:

  orderer3.delivery.com:
    container_name: orderer3.delivery.com
    image: hyperledger/fabric-orderer:latest
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_HOST=orderer3.delivery.com
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=DeliveryMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_DEBUG_BROADCASTTRACEDIR=data/logs
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none
      - ORDERER_CHANNELPARTICIPATION_ENABLED=true
      - ORDERER_ADMIN_TLS_ENABLED=true
      - ORDERER_ADMIN_TLS_CERTIFICATE=/var/hyperledger/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_ADMIN_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls-msp/keystore/key.pem
      - ORDERER_ADMIN_TLS_ROOTCAS=[/var/hyperledger/orderer/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_ADMIN_TLS_CLIENTAUTHREQUIRED=true
      - ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/var/hyperledger/delivery/admin/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_ADMIN_LISTENADDRESS=0.0.0.0:7057
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer3.delivery.com:9447
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /root
    command: orderer
    volumes:
      - ../../organizations/peerOrganizations/delivery.com/orderers/orderer3.delivery.com:/var/hyperledger/orderer/
      - ../../organizations/peerOrganizations/delivery.com/admin:/var/hyperledger/delivery/admin/
      - orderer3.delivery.com:/var/hyperledger/production/orderer
    ports:
      - 7056:7050
      - 7057:7057
      - 9447:9447
    networks:
      - blockchain_network

  orderer4.delivery.com:
    container_name: orderer4.delivery.com
    image: hyperledger/fabric-orderer:latest
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_HOST=orderer4.delivery.com
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=DeliveryMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_DEBUG_BROADCASTTRACEDIR=data/logs
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none
      - ORDERER_CHANNELPARTICIPATION_ENABLED=true
      - ORDERER_ADMIN_TLS_ENABLED=true
      - ORDERER_ADMIN_TLS_CERTIFICATE=/var/hyperledger/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_ADMIN_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls-msp/keystore/key.pem
      - ORDERER_ADMIN_TLS_ROOTCAS=[/var/hyperledger/orderer/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_ADMIN_TLS_CLIENTAUTHREQUIRED=true
      - ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/var/hyperledger/delivery/admin/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_ADMIN_LISTENADDRESS=0.0.0.0:7059
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer4.delivery.com:9448
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /root
    command: orderer
    volumes:
      - ../../organizations/peerOrganizations/delivery.com/orderers/orderer4.delivery.com:/var/hyperledger/orderer/
      - ../../organizations/peerOrganizations/delivery.com/admin:/var/hyperledger/delivery/admin/
      - orderer4.delivery.com:/var/hyperledger/production/orderer
    ports:
      - 7058:7050
      - 7059:7059
      - 9448:9448
    networks:
      - blockchain_network

  # couchdb가 먼저 실행 되어야한다.
  couchdb2:
    container_name: couchdb2
    image: couchdb:3.3.2
    labels:
      service: hyperledger-fabric
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=adminpw

    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "7984:5984"
    networks:
      - blockchain_network

  peer0.delivery.com:
    container_name: peer0.delivery.com
    image: hyperledger/fabric-peer:latest
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/peercfg
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=test_network
      - FABRIC_LOGGING_SPEC=INFO
      # - FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls-msp/signcerts/cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls-msp/keystore/key.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # Peer specific variables
      - CORE_PEER_ID=peer0.delivery.com
      - CORE_PEER_ADDRESS=peer0.delivery.com:11051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:11051
      - CORE_PEER_CHAINCODEADDRESS=peer0.delivery.com:11052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:11052
      # bootstrap peer is the other peer in the same org
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.delivery.com:13051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.delivery.com:11051
      - CORE_PEER_LOCALMSPID=DeliveryMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_OPERATIONS_LISTENADDRESS=peer0.delivery.com:9450
      - CORE_METRICS_PROVIDER=prometheus
      - CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={"peername":"peer0delivery"}
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      # CouchDB
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_LEDGER_HISTORY_ENABLEHISTORYDATABASE=true
    depends_on:
      - couchdb2
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../../organizations/peerOrganizations/delivery.com/peers/peer0.delivery.com:/etc/hyperledger/fabric
      - peer0.delivery.com:/var/hyperledger/production
      - ../../configtx:/etc/hyperledger/peercfg
    working_dir: /root
    command: peer node start
    ports:
      - 11051:11051
      - 9450:9450
    networks:
      - blockchain_network

  # couchdb가 먼저 실행 되어야한다.
  couchdb3:
    container_name: couchdb3
    image: couchdb:3.3.2
    # image: hyperledger/fabric-couchdb:0.4.22
    # image: hyperledger/fabric-couchdb:x86_64-0.4.7
    labels:
      service: hyperledger-fabric
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      # - COUCHDB_USER=
      # - COUCHDB_PASSWORD=
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=adminpw
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "8984:5984"
    networks:
      - blockchain_network

  peer1.delivery.com:
    container_name: peer1.delivery.com
    image: hyperledger/fabric-peer:latest
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/peercfg
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=test_network
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls-msp/signcerts/cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls-msp/keystore/key.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem
      # Peer specific variables
      - CORE_PEER_ID=peer1.delivery.com
      - CORE_PEER_ADDRESS=peer1.delivery.com:13051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:13051
      - CORE_PEER_CHAINCODEADDRESS=peer1.delivery.com:13052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:13052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.delivery.com:13051
      # bootstrap peer is the other peer in the same org
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.delivery.com:11051
      - CORE_PEER_LOCALMSPID=DeliveryMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_OPERATIONS_LISTENADDRESS=peer1.delivery.com:9451
      - CORE_METRICS_PROVIDER=prometheus
      - CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={"peername":"peer1delivery"}
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      # CouchDB
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_LEDGER_HISTORY_ENABLEHISTORYDATABASE=true
    depends_on:
      - couchdb3
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../../organizations/peerOrganizations/delivery.com/peers/peer1.delivery.com:/etc/hyperledger/fabric
      - peer1.delivery.com:/var/hyperledger/production
      - ../../configtx:/etc/hyperledger/peercfg
    working_dir: /root
    command: peer node start
    ports:
      - 13051:13051
      - 9451:9451
    networks:
      - blockchain_network
